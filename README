=======================
=       Poezio        =
=======================
Homepage: http://codingteam.net/projet/poezio

Poezio is a console Jabber client. Its goal is to use anonymous
connections to let the user join MultiUserChats. This way, the user
don't have to create a Jabber account, exactly like people are using
IRC. It doesn't handle contact list at all.
Poezio's commands are design to be (if possible) like well known IRC
clients (weechat, irssi, mirc).

=======================
	Install
=======================
You just need python
the xmpppy lib is provided with poezio, as many
distributions still use xmpppy 0.4.1 which doesn't
work with anonymous connexion.
This will be eventually fixed latter on.

Before launching poezio you need to type
make
in order to build the xmpppy library.

you can then launch poezio with
sh launch.sh

or you can install it with (as root or with sudo)
make install
(`make uninstall` works, don't worry ;))
you can then launch poezio

You can edit the config file (~/.config/poezio/poezio.cfg by default)
or data/default_config.cfg (if you want to edit the config before the
first launch)

See the online documentation for more information:
http://codingteam.net/project/poezio/doc

Please DO report any bug that you encounter.

=======================
	Authors
=======================
Florent Le Coz (louiz') <louizatakk@fedoraproject.org> (main developper)

=======================
    Contact/support
=======================
Jabber ChatRoom:   poezio@conference.codingteam.net
Forum:             http://codingteam.net/project/poezio/forum
Report a bug:      http://codingteam.net/project/poezio/bugs/add

=======================
	License
=======================
Poezio is Free Software.
(learn more: http://www.gnu.org/philosophy/free-sw.html)

Poezio is released under the Gnu GPLv3 license
Please read the COPYING file for details

=======================
	Thanks
=======================
= People =
 xbright (Handler and MultiUserChat classes)

======================
       The code
======================

Classes:
  - Connection *receives* messages from the Jabber network
  - MultiUserChat *sends* messages to the Jabber network
  - Gui displays everything on the screen and gets the user inputs
  - Handler is the "link" between all these classes :
a class emits a signal and the others classes listen to this signal
and do what they have to do whenever this signal is emitted by any class

Q: Why not use Connection to receive AND send the messages to Jabber network?
A: I like it this way.

Q: Could you please make a nice ASCII art, so I could understand all
   the beauty and the complexity of this awesome software ?
A: Of course, here it is:

                 ___________________________
                /                           \
                |                           |
                |     Jabber Network        |
                |   (roomchats and people   |
                |        in them)           |
		|                           |
                \__________________________/
                    |                   ^
                    | receive     send  |          ____ Poezio ____
                    v                   |
           /----------------\   /-----------------\
	   |                |   |                 |
           |   Connection   |   |  MultiUserChat  |
           |                |   |                 |
	   \----------------/   \-----------------/
                ^ |emit             emit | ^
                | |      /---------\     | |
       connect  \ \----> |         |<----/ / connect
		 \______ | Handler |______/
                         |         |
                         \---------/
                             | ^
                     connect | | emit
                             v |
			 /---------\
			 |         |
			 |   Gui   |
                         |         |
                         \---------/
                             | ^
                      Screen | | Keyboard
                             v |
			 /---------\
			 |         |
                         |   YOU   |
                         |         |
                         \---------/
